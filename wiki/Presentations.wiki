#summary VClipse presentations at CWG conferences.

= Introduction =

VClipse was presented at the following [http://www.configuration-workgroup.com Configuration Workgroup (CWG)] conferences.


== [http://vclipse.eclipselabs.org.codespot.com/files/webXcerpt-TimGeisler-ConfigModeler-VClipse-CWG-2010-04-20.pdf ConfigModeler and VClipse - languages and IDEs for product modeling] ==

2010 CWG European Conference - Vienna, Austria (Tim Geisler, webXcerpt Software GmbH)

We present !ConfigModeler and VClipse, two domain-specific languages and corresponding Eclipse-based integrated development environments (IDEs) for product modeling on different levels of abstraction.

VClipse supports the direct specification of objects and dependencies using VC's abstraction level in a textual language called VCML.

!ConfigModeler supports the specification of product models in a language supporting a high degree of abstraction. Developed in a customer project, this language has been designed according to the customer's needs and uses the customer's concepts. !ConfigModeler translates the product models to VC objects and dependencies, optionally represented as VCML code.

In both cases the VC objects and dependencies can be transferred to an SAP system using RFC or product data replication (PDR) via IDocs. With VClipse, it is also possible to extract product models from an SAP system. This enables the use of standard text comparison tools and version control systems.

VClipse is released as an open-source project on http://www.vclipse.org - so you are all invited to use VClipse in your work and products, or even to contribute to it.


== [http://vclipse.eclipselabs.org.codespot.com/files/webXcerpt-TimGeisler-DomainSpecificLanguagesForProductModeling-CWG-2011-05-10.pdf Domain-Specific Languages for Product Modeling] ==

2011 CWG European Conference - Cologne, Germany (Tim Geisler, webXcerpt Software GmbH)

We present !ConfigModeler and VClipse, two domain-specific languages and corresponding Eclipse-based integrated development environments (IDEs) for product modeling on different levels of abstraction.

VClipse supports the direct specification of objects and dependencies using VC's abstraction level in a textual language called VCML. VC objects and dependencies can be transferred to an SAP system using RFC or product data replication (PDR) via IDocs. It is also possible to extract product models from an SAP system. This enables the use of standard text comparison tools and version control systems. VClipse is released as an open-source project on http://www.vclipse.org.

!ConfigModeler supports the specification of product models in a language supporting a high degree of abstraction. Developed in a customer project at [http://www.nokiasiemensnetworks.com Nokia Siemens Networks], this language has been designed according to the customer's needs, uses the customer's concepts, and fits into the customer’s VC and IPC add-ons. !ConfigModeler translates the product models to VC objects and dependencies represented as VCML code.

We will give a demonstration of the two development environments and give an outlook to current and future developments.


== [http://vclipse.eclipselabs.org.codespot.com/files/webXcerpt-TimGeisler-HowToCreateYourOwnProductModelingEnvironment-CWG-2011-10-04.pdf How to Create Your Own Product-Modeling Environment] ==

2011 North American CWG Conference - Marco Island, Florida, USA (Tim Geisler, webXcerpt Software GmbH)

We present !ConfigModeler and VClipse, two domain-specific languages and corresponding Eclipse-based integrated development environments (IDEs) for product modeling on different levels of abstraction.

VClipse supports the direct specification of objects and dependencies using VC's abstraction level in a textual language called VCML. VC objects and dependencies can be transferred to an SAP system using RFC or product data replication (PDR) via IDocs. It is also possible to extract product models from an SAP system. This enables the use of standard text comparison tools and version control systems. VClipse is released as an open-source project on www.vclipse.org.

!ConfigModeler supports the specification of product models in a language supporting a high degree of abstraction. Developed in a customer project at [http://www.nokiasiemensnetworks.com Nokia Siemens Networks], this language has been designed according to the customer's needs, uses the customer's concepts, and fits into the customer’s VC and IPC add-ons. !ConfigModeler translates the product models to VC objects and dependencies represented as VCML code.

An integration of the automatic testing tool [http://www.fysbee.com ConfigScan] allows to validate the product models.

We will give a demonstration of the two development environments and give an outlook to current and future developments.

We sketch what has to be done when you consider to take a similar approach for product modeling in your domain.