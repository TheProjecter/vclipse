#summary Instructions on how to build VClipse from its sources
#labels Featured,Phase-Deploy
#sidebar TableOfContents

= Building VClipse =

You should follow these instructions when you like to build VClipse from its sources.

It is assumed that you know how to install Java, Eclipse, and Eclipse plugins from update sites.


== Prerequisites ==

VClipse requires Java Runtime Environment (JRE) version 6, Eclipse Helios (3.6.x), and the Eclipse TMF Xtext 1.0.x SDK installed.
VClipse does not work with older releases of TMF Xtext (e.g., Xtext 0.7.2 as provided with Eclipse Galileo (3.5.x)), since the APIs have been changed.

 * Install Java Runtime Environment 6 from http://java.sun.com/javase/downloads
 * Install the Eclipse Helios distribution ''Eclipse for RCP and RAP Developers'' from http://www.eclipse.org/downloads
 * Install the following items out of the ''Modeling'' category from the Helios update site http://download.eclipse.org/releases/helios
   * EMF - Eclipse Modeling Framework SDK
   * EMF Compare SDK
   * MWE2 runtime SDK
   * Xpand SDK
   * Xtext SDK
 * Install the following item from the uncategorized Helios update site (deselect ''Group items by category'')
   * Apache Jakarta log4j
 * Install the following item from the TMF Xtext update site at itemis http://download.itemis.com/updates/
   * xtext-antlr 1.0.0 


== Mercurial ==

VClipse is maintained on [http://code.google.com/a/eclipselabs.org/hosting/ Eclipse Labs] using the distributed version control system [http://selenic.com/mercurial Mercurial]. You can retrieve the source code using any Mercurial client. 

 * Make sure a Mercurial client is installed in your Eclipse distribution, e.g.,  [http://www.javaforge.com/project/HGE MercurialEclipse] (update site at http://cbes.javaforge.com/update)
 * Select ''File'' > ''Import...'' > ''Clone Existing Mercurial Repository'' and import all projects using the repository location https://hg.codespot.com/a/eclipselabs.org/vclipse/ You do not have to supply a user name. Select the ''default'' branch. Import all projects into your workspace.

You will now notice error markers in several files when Eclipse tries to build the projects.
They will disappear after the next step.


== Building VClipse ==

VClipse is implemented using the [http://www.eclipse.org/Xtext Xtext] framework.
From the grammar definition files ''VCML.xtext'' and ''IDoc.xtext'' inside of the VClipse plugins, 
certain Java code has to be generated by running two MWE2 workflow files in sequence: 

 * Create the folders org.vclipse.idoc/src-gen, org.vclipse.vcml/src-gen, org.vclipse.jpplib/bin, and org.vclipse.jpplib/src (Mercurial does not maintain empty folders).
 * In the folder org.vclipse.idoc/src/org/vclipse/idoc, right click on ''GenerateIDoc.mwe2'' and select ''Run As'' > ''MWE2 Workflow''
 * In the folder org.vclipse.vcml/src/org/vclipse/vcml, right click on ''GenerateVCML.mwe2'' and select ''Run As'' > ''MWE2 Workflow''

If there are error messages coming up, just click ''Proceed''.
The ''Console'' view will show the progress of the workflows.

Building the workspace might take a while, but after it is finished all error markers should have disappeared.

If you get !OutOfMemory errors or warnings from the parser generator, you should increase the heap size for the workflow launcher.
Supply e.g. the VM argument -Xmx1024m to the run configuration. 

You can now start VClipse by launching a separate Eclipse application using the Eclipse Application launcher.


== Installing VClipse ==

To install VClipse directly into your Eclipse instance
 # Select ''File'' > ''Export...'' > ''Plug-in Development'' > ''Deployable features'' > ''Next''
 # Select all VClipse features.
 # Select ''Install into host. Repository'' and click 'Finish'.
 # Restart Eclipse, when asked.

Now you can start using VClipse by creating a VCML file. 